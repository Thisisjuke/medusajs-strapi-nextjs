version: "3.8"
services:
  nextjs:
    user: "${UID}:${GID}"
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    image: nextjs:18
    container_name: nextjs
    depends_on:
      - medusa-api
      - strapi
    ports:
      - "3000:3000"
    volumes:
      - ./nextjs:/app/
    environment:
      MEDUSA_BACKEND_URL: ${MEDUSA_BACKEND_URL}
      STRAPI_BACKEND_URL: ${STRAPI_BACKEND_URL}
    networks:
      - stack

  strapi:
    user: "${UID}:${GID}"
    container_name: strapi
    build:
      context: ./strapi
      dockerfile: Dockerfile.dev
    volumes:
      - ./strapi:/srv/app
    ports:
      - '1337:1337'
      - '8000:8000'
    environment:
      JWT_SECRET: ${STRAPI_JWT_SECRET}
      APP_KEYS: ${STRAPI_APP_KEYS}
      API_TOKEN_SALT: ${STRAPI_API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
      DATABASE_HOST: ${STRAPI_DATABASE_HOST}
      DATABASE_PORT: ${STRAPI_DATABASE_PORT}
      DATABASE_NAME: ${STRAPI_DATABASE_NAME}
      DATABASE_USERNAME: ${STRAPI_DATABASE_USERNAME}
      DATABASE_PASSWORD: ${STRAPI_DATABASE_PASSWORD}
      DATABASE_SSL: ${STRAPI_DATABASE_SSL}
    networks:
      - stack

  strapi-postgres:
    image: postgres:10.4
    ports:
      - "5433:5432"
    volumes:
      - strapi-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${STRAPI_POSTGRES_USER}
      POSTGRES_PASSWORD: ${STRAPI_POSTGRES_PASSWORD}
      POSTGRES_DB: ${STRAPI_POSTGRES_DB}
    networks:
      - stack

  medusa-admin:
    user: "${UID}:${GID}"
    env_file:
      - .env
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    image: admin-panel:starter
    container_name: medusa-admin
    depends_on:
      - medusa-api
    ports:
      - "7000:7000"
    volumes:
      - ./admin-panel:/app/
    networks:
      - stack

  medusa-api:
    user: "${UID}:${GID}"
    build:
      context: medusa-api
      dockerfile: Dockerfile
    image: backend:starter
    container_name: medusa-api
    depends_on:
      - medusa-postgres
      - medusa-redis
      - strapi
    environment:
      DATABASE_URL: ${MEDUSA_DATABASE_URL}
      REDIS_URL: ${MEDUSA_REDIS_URL}
      NODE_ENV: ${MEDUSA_NODE_ENV}
      JWT_SECRET: ${MEDUSA_JWT_SECRET}
      COOKIE_SECRET: ${MEDUSA_COOKIE_SECRET}
      PORT: ${MEDUSA_PORT}
      DISABLE_TELEMETRY: ${MEDUSA_DISABLE_TELEMETRY}
      STRAPI_USER: ${MEDUSA_STRAPI_USER}
      STRAPI_PASSWORD: ${MEDUSA_STRAPI_PASSWORD}
      STRAPI_PROTOCOL: ${MEDUSA_STRAPI_PROTOCOL}
      STRAPI_URL: ${MEDUSA_STRAPI_URL}
      STRAPI_PORT: ${MEDUSA_STRAPI_PORT}
    ports:
      - "9000:9000"
    volumes:
      - ./medusa-api:/app/medusa
    networks:
      - stack

  medusa-postgres:
    image: postgres:10.4
    ports:
      - "5432:5432"
    volumes:
      - medusa-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${MEDUSA_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MEDUSA_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MEDUSA_POSTGRES_DB}
    networks:
      - stack

  medusa-minio:
    image: minio/minio
    ports:
      - "9010:9000"
      - "9011:9001"
    volumes:
      - ./.medusa_minio_storage:/data
    environment:
      MINIO_ROOT_USER: masoud
      MINIO_ROOT_PASSWORD: Strong#Pass#2022
    command: server --console-address ":9001" /data
    networks:
      - stack

  medusa-redis:
    image: redis
    expose:
      - 6379
    networks:
      - stack

networks:
  stack:
    driver: bridge

volumes:
  strapi-postgres:
  medusa-postgres: